diff --git a/dist/listener.mjs b/dist/listener.mjs
index cc1b4fba81e0b167a7ca71ccba128c0401ba4ae2..8db7fce393465d84166796b970b20e257ebfacbc 100644
--- a/dist/listener.mjs
+++ b/dist/listener.mjs
@@ -13,7 +13,7 @@ var getRequestListener = (fetchCallback) => {
     }
     const init = {
       method,
-      headers: headerRecord
+      headers: headerRecord,
     };
     if (!(method === "GET" || method === "HEAD")) {
       init.body = Readable.toWeb(incoming);
@@ -25,7 +25,10 @@ var getRequestListener = (fetchCallback) => {
     } catch (e) {
       res = new Response(null, { status: 500 });
       if (e instanceof Error) {
-        if (e.name === "TimeoutError" || e.constructor.name === "TimeoutError") {
+        if (
+          e.name === "TimeoutError" ||
+          e.constructor.name === "TimeoutError"
+        ) {
           res = new Response(null, { status: 504 });
         }
       }
@@ -36,7 +39,10 @@ var getRequestListener = (fetchCallback) => {
     const contentLength = res.headers.get("content-length");
     const transferEncoding = res.headers.get("transfer-encoding");
     for (const [k, v] of res.headers) {
-      if (k === "set-cookie") {
+      if (
+        k === "set-cookie" &&
+        typeof res.headers.getSetCookie === "function"
+      ) {
         outgoing.setHeader(k, res.headers.getSetCookie(k));
       } else {
         outgoing.setHeader(k, v);
@@ -45,7 +51,13 @@ var getRequestListener = (fetchCallback) => {
     outgoing.statusCode = res.status;
     if (res.body) {
       try {
-        if (contentEncoding || transferEncoding || contentLength || /^no$/i.test(buffering) || !/^(application\/json\b|text\/(?!event-stream\b))/i.test(contentType)) {
+        if (
+          contentEncoding ||
+          transferEncoding ||
+          contentLength ||
+          /^no$/i.test(buffering) ||
+          !/^(application\/json\b|text\/(?!event-stream\b))/i.test(contentType)
+        ) {
           await pipeline(Readable.fromWeb(res.body), outgoing);
         } else {
           const text = await res.text();
@@ -54,7 +66,8 @@ var getRequestListener = (fetchCallback) => {
         }
       } catch (e) {
         console.error(e);
-        const err = e instanceof Error ? e : new Error("unknown error", { cause: e });
+        const err =
+          e instanceof Error ? e : new Error("unknown error", { cause: e });
         outgoing.destroy(err);
       }
     } else {
@@ -62,6 +75,4 @@ var getRequestListener = (fetchCallback) => {
     }
   };
 };
-export {
-  getRequestListener
-};
+export { getRequestListener };